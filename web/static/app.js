const tg = window.Telegram.WebApp;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebApp
tg.ready();
tg.expand();

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É
document.body.style.backgroundColor = tg.themeParams.bg_color || '#ffffff';

const cityInput = document.getElementById('cityInput');
const weatherBtn = document.getElementById('weatherBtn');
const status = document.getElementById('status');

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
cityInput.addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
        getWeather();
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
function showStatus(message, type) {
    status.innerHTML = message;
    status.className = 'status ' + type;
    status.style.display = 'block';
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    if (type === 'success') {
        setTimeout(() => {
            hideStatus();
        }, 5000);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è —Å—Ç–∞—Ç—É—Å–∞
function hideStatus() {
    status.style.display = 'none';
    status.className = 'status';
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
function getWeather() {
    const city = cityInput.value.trim();
    
    if (!city) {
        showStatus('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞', 'error');
        cityInput.focus();
        return;
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–≤–æ–¥–∞
    if (city.length < 2) {
        showStatus('‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ', 'error');
        cityInput.focus();
        return;
    }
    
    if (city.length > 50) {
        showStatus('‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ', 'error');
        cityInput.focus();
        return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    weatherBtn.disabled = true;
    weatherBtn.innerHTML = '<span class="loading"></span>–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ...';
    hideStatus();
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –±–æ—Ç—É
    try {
        const data = {
            city: city,
            timestamp: Date.now(),
            user_id: tg.initDataUnsafe?.user?.id || null
        };
        
        tg.sendData(JSON.stringify(data));
        showStatus('‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏–¥–µ—Ç –≤ —á–∞—Ç.', 'success');
        
        // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
        cityInput.value = '';
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º WebApp —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            tg.close();
        }, 2000);
        
    } catch (error) {
        showStatus('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'error');
        console.error('Error sending data:', error);
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    setTimeout(() => {
        weatherBtn.disabled = false;
        weatherBtn.innerHTML = 'üå°Ô∏è –ü–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É';
    }, 2000);
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ WebApp
tg.MainButton.hide();
tg.BackButton.hide();

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π WebApp
tg.onEvent('mainButtonClicked', function() {
    getWeather();
});

tg.onEvent('backButtonClicked', function() {
    tg.close();
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ WebApp
if (tg.platform) {
    tg.setHeaderColor('#0088cc');
}

// –ê–≤—Ç–æ—Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ (–¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞)
if (!tg.platform.includes('mobile')) {
    setTimeout(() => {
        cityInput.focus();
    }, 300);
}

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
console.log('WebApp initialized:', {
    platform: tg.platform,
    version: tg.version,
    user: tg.initDataUnsafe?.user,
    colorScheme: tg.colorScheme
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
tg.onEvent('themeChanged', function() {
    document.body.style.backgroundColor = tg.themeParams.bg_color || '#ffffff';
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
function showUserInfo() {
    if (tg.initDataUnsafe?.user) {
        const user = tg.initDataUnsafe.user;
        console.log('User info:', user);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
showUserInfo(); 